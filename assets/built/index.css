/*
! tailwindcss v3.3.3 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.prose :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.prose :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.prose :where(a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.prose :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.prose :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.prose :where(code):not(:where([class~="not-prose"] *))::before {
  content: "`";
}

.prose :where(code):not(:where([class~="not-prose"] *))::after {
  content: "`";
}

.prose :where(a code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h1 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.prose :where(h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.prose :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::before {
  content: none;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::after {
  content: none;
}

.prose :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.prose :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.prose :where(tfoot td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
}

.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.prose :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.m-auto {
  margin: auto;
}

.max-w-full {
  max-width: 100%;
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rounded-full {
  border-radius: 9999px;
}

/*

This is a development CSS file that is compiled to a minified
production stylesheet in assets/built/screen.css using: npm run dev

*/

/* Lib - Local component imports
/* ---------------------------------------------------------- */

/* Base components */

/* @import "vars.css";
@import "components/global.css";
@import "components/forms.css";
@import "components/buttons.css"; */

/* Variables
/* ---------------------------------------------------------- */

:root {
  /* Colours */
  --color-primary: var(--ghost-accent-color, #3eb0ef);
  --color-base: #131313;
  --color-border: #ddd;
  --color-bg: #f5f5f5;
  --color-success: #80b912;
  --color-error: #f05230;
  /* Fonts */
  --font-sans-serif: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
  --font-serif: Georgia, Times, serif;
  --font-mono: Menlo, Courier, monospace;
  --font-light: 100;
  --font-normal: 400;
  --font-bold: 700;
  --font-heavy: 800;
  /* Breakpoints */
  --xlarge: 1680px;
  --large: 1280px;
  --medium: 980px;
  --small: 740px;
  --xsmall: 480px;
  /* Sizes */
  --height: 4rem;
  --margin: 2rem;
  --radius: 0.5rem;
}

/* Buttons
/* ---------------------------------------------------------- */

.gh-button {
  display: inline-block;
  min-width: 75px;
  height: var(--height);
  padding: 0 2rem;
  border: 0;
  border-radius: var(--radius);
  cursor: pointer;
  font-family: var(--font-sans-serif);
  font-size: 1.4rem;
  font-weight: var(--font-normal);
  line-height: var(--height);
  text-align: center;
  text-decoration: none;
  white-space: nowrap;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  transition: 0.4s ease;
}

.gh-button.gh-button-fit {
  width: 100%;
}

.gh-button.gh-button-small {
  height: calc(var(--height) * 0.9);
  line-height: calc(var(--height) * 0.9);
  padding: 0 1.5rem;
  font-size: 1.2rem;
}

.gh-button.gh-button-large {
  height: calc(var(--height) * 1.2);
  line-height: calc(var(--height) * 1.2);
  padding: 0 2.5rem;
  font-size: 1.7rem;
}

.gh-button.gh-button-disabled,
.gh-button:disabled {
  pointer-events: none;
  opacity: 0.4;
}

.gh-button {
  color: inherit;
  background-color: transparent;
  box-shadow: inset 0 0 0 2px currentColor
}

.gh-button:hover {
  text-decoration: none;
  color: var(--color-primary) !important;
  box-shadow: inset 0 0 0 2px var(--color-primary);
  transition: 0.2s ease;
}

.gh-button.gh-button-primary {
  color: #fff !important;
  background-color: var(--color-primary);
  box-shadow: none;
}

.gh-button.gh-button-primary:hover {
  background-color: var(--color-primary);
}

/* Forms
/* ---------------------------------------------------------- */

.gh-input,
.gh-textarea {
  background: var(--color-bg);
  border-radius: var(--radius);
  border: none;
  border: solid 1px var(--color-border);
  color: inherit;
  display: block;
  outline: 0;
  padding: 0 0.6em;
  text-decoration: none;
  width: 100%;
}

.gh-input:focus {
  border-color: var(--color-primary);
}

.gh-select {
  height: var(--height);
  padding-right: var(--height);
  text-overflow: ellipsis;
}

.gh-select option {
  color: var(--color-primary);
  background: var(--color-bg);
}

.gh-select:focus::-ms-value {
  background-color: transparent;
}

.gh-select::-ms-expand {
  display: none;
}

.gh-input,
.gh-select {
  height: var(--height);
}

.gh-textarea {
  padding: 0.3em 0.6em;
  resize: vertical;
}

.gh-check {
  display: block;
  margin-right: -2em;
  opacity: 0;
  width: 1em;
  z-index: -1;
}

.gh-check + label,
.gh-check + label {
  display: flex;
  align-items: center;
  color: var(--color-base);
  cursor: pointer;
  font-size: 1em;
  font-weight: var(--font-normal);
  padding-left: calc((var(--height) * 0.6) + 0.75em);
  padding-right: 2rem;
  position: relative;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.gh-check + label:before,
.gh-check + label:before {
  background: var(--color-bg);
  border-radius: var(--radius);
  border: solid 1px var(--color-border);
  content: '';
  display: inline-block;
  height: calc(var(--height) * 0.6);
  line-height: calc(var(--height) * 0.56);
  text-align: center;
  width: calc(var(--height) * 0.6);
  margin-right: 1rem;
}

.gh-check:checked + label:before,
.gh-check:checked + label:before {
  background: var(--color-primary);
  border-color: var(--color-primary);
  color: var(--color-bg);
  content: '✓';
}

.gh-check:focus + label:before,
.gh-check:focus + label:before {
  border-color: var(--color-primary);
  box-shadow: 0 0 0 1px var(--color-primary);
}

.gh-check + label:before {
  border-radius: var(--radius);
  border-radius: 100%;
}

/* Reset
/* ---------------------------------------------------------- */

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  font-size: 62.5%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

body {
  min-height: 100vh;
  margin: 0;
  padding: 0;
  color: #464646;
  font-family: var(--font-sans-serif);
  font-size: 1.5rem;
  line-height: 1.6em;
  font-weight: 400;
  font-style: normal;
  background: #fff;
  scroll-behavior: smooth;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

p,
ul,
ol,
li,
dl,
dd,
hr,
pre,
form,
table,
video,
figure,
figcaption,
blockquote {
  margin: 0;
  padding: 0;
}

ul[class],
ol[class] {
  padding: 0;
  list-style: none;
}

img {
  display: block;
  max-width: 100%;
  height: auto;
}

input,
button,
select,
textarea {
  font: inherit;
  -webkit-appearance: none;
}

fieldset {
  margin: 0;
  padding: 0;
  border: 0;
}

label {
  display: block;
  font-size: 0.9em;
  font-weight: 700;
}

hr {
  position: relative;
  display: block;
  width: 100%;
  height: 1px;
  border: 0;
  border-top: 1px solid currentcolor;
  opacity: 0.2;
}

::-moz-selection {
  text-shadow: none;
  background: #cbeafb;
}

::selection {
  text-shadow: none;
  background: #cbeafb;
}

mark {
  background-color: #fdffb6;
}

small {
  font-size: 80%;
}

sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

ul:not([class]) li + li {
  margin-top: 0.6em;
}

a:not([class]) {
  color: var(--color-primary);
  -webkit-text-decoration-skip: ink;
          text-decoration-skip-ink: auto;
}

a[class] {
  color: inherit;
  text-decoration: none;
  transition: 0.4s ease;
}

a[class]:hover {
  transition: 0.2s ease;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  line-height: 1.15em;
  font-weight: 700;
}

h1 {
  font-size: 4.6rem;
  letter-spacing: -0.5px;
}

@media (max-width: 500px) {
  h1 {
    font-size: 2.7rem;
  }
}

h2 {
  font-size: 3.6rem;
}

@media (max-width: 500px) {
  h2 {
    font-size: 2.2rem;
  }
}

h3 {
  font-size: 3.2rem;
}

@media (max-width: 500px) {
  h3 {
    font-size: 1.8rem;
  }
}

h4 {
  font-size: 2.6rem;
}

h5 {
  font-size: 2.4rem;
}

h6 {
  font-size: 2.2rem;
}

/* Remove all animations and transitions for people that prefer not to see them */

@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Ghost components */

/* @import "ghost/header.css";
@import "ghost/content.css";
@import "ghost/readmore.css";
@import "ghost/members.css";
@import "ghost/errors.css";
@import "ghost/footer.css";
@import "ghost/badge.css";
@import "ghost/pagination.css";
@import "ghost/comments.css"; */

a.gh-powered,
a.gh-powered:hover {
  display: inline-flex;
  align-items: center;
  padding: 6px 9px 6px 6px;
  border: none;
  font-size: 12px;
  line-height: 12px;
  letter-spacing: -0.3px;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", sans-serif;
  font-weight: 600;
  text-decoration: none;
  color: #383838;
  background: #fff;
  border-radius: 5px;
  box-shadow: 0 0 0 1px rgba(0,0,0,.1), 0 1px 3px rgba(0,0,0,.08);
  cursor: pointer;
}

a.gh-powered svg {
  height: 16px;
  width: 16px;
  margin: 0 6px 0 0;
}

.gh-post-comments {
  margin-block: 8vmin 4vmin;
}

/* Content grid
/* ---------------------------------------------------------- */

.gh-canvas,
.kg-width-full.kg-content-wide {
  --gap: 4vw;
  --main: min(var(--content-width, 720px), 100% - var(--gap) * 2);
  --wide: minmax(0, calc((var(--container-width, 1200px) - var(--content-width, 720px)) / 2));
  --full: minmax(var(--gap), 1fr);
  display: grid;
  grid-template-columns:
        [full-start] var(--full)
        [wide-start] var(--wide)
        [main-start] var(--main) [main-end]
        var(--wide) [wide-end]
        var(--full) [full-end];
}

.gh-canvas > * {
  grid-column: main-start / main-end;
}

.kg-width-wide,
.kg-content-wide > div {
  grid-column: wide-start / wide-end;
}

.kg-width-full {
  grid-column: full-start / full-end;
}

.kg-width-full img {
  width: 100%;
}

/* Content & Typography
/* ---------------------------------------------------------- */

.gh-content > * + * {
  margin-top: 4vmin;
}

.gh-content [id]:not(:first-child) {
  margin: 1.5em 0 0;
}

.gh-content > [id] + * {
  margin-top: 1.5rem;
}

.gh-content [id] + .kg-card,
.gh-content blockquote + .kg-card {
  margin-top: 6vmin;
}

.gh-canvas > blockquote,
.gh-canvas > ol,
.gh-canvas > ul,
.gh-canvas > dl,
.gh-canvas > p {
  font-family: var(--font-serif);
  font-weight: 400;
  font-size: 2rem;
  line-height: 1.6em;
}

.gh-content > ul,
.gh-content > ol,
.gh-content > dl {
  padding-left: 1.9em;
}

.gh-content hr {
  margin-top: 6vmin;
}

.gh-content hr + * {
  margin-top: 6vmin !important;
}

.gh-content blockquote {
  position: relative;
  font-style: italic;
}

.gh-content blockquote::before {
  content: "";
  position: absolute;
  left: -1.5em;
  top: 0;
  bottom: 0;
  width: 0.3rem;
  background: var(--color-primary);
}

@media (max-width: 650px) {
  .gh-canvas blockquote,
    .gh-canvas ol,
    .gh-canvas ul,
    .gh-canvas dl,
    .gh-canvas p {
    font-size: 1.8rem;
  }

  .gh-content blockquote::before {
    left: -4vmin;
  }
}

/* Cards
/* ---------------------------------------------------------- */

.gh-content :not(.kg-card):not([id]) + .kg-card {
  margin-top: 6vmin;
}

.gh-content .kg-card + :not(.kg-card) {
  margin-top: 6vmin;
}

figcaption {
  padding: 1.5rem 1.5rem 0;
  text-align: center;
  color: rgba(0,0,0,0.5);
  font-weight: 600;
  font-size: 1.3rem;
  line-height: 1.4em;
}

figcaption strong {
  color: rgba(0,0,0,0.8);
}

.gh-canvas :not(pre) code {
  vertical-align: middle;
  padding: 0.15em 0.4em 0.15em;
  border: #e1eaef 1px solid;
  font-weight: 400 !important;
  font-size: 0.9em;
  line-height: 1em;
  color: #dc0050;
  background: #f0f6f9;
  border-radius: 0.25em;
}

.gh-canvas > pre {
  overflow: scroll;
  padding: 16px 20px;
  background: rgba(255,255,255,0.8);
  border-radius: 5px;
  box-shadow: 0 2px 6px -2px rgba(0,0,0,.1), 0 0 1px rgba(0,0,0,.4);
}

.kg-embed-card {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
}

/* Default to 16 / 9 aspect ratio for YouTube & Vimeo embeds  */

.kg-embed-card > :where(iframe[src*="youtube.com"],iframe[src*="vimeo.com"]) {
  width: 100%;
  height: auto;
  aspect-ratio: 16 / 9;
}

.kg-image-card img {
  margin: auto;
}

/* Card captions
/* ---------------------------------------------------------- */

.kg-width-full.kg-card-hascaption {
  display: grid;
  grid-template-columns: inherit;
}

.kg-width-wide.kg-card-hascaption img {
  grid-column: wide-start / wide-end;
}

.kg-width-full.kg-card-hascaption img {
  grid-column: 1 / -1;
}

.kg-width-full.kg-card-hascaption figcaption {
  grid-column: main-start / main-end;
}

/* Tables
/* ---------------------------------------------------------- */

.gh-content table {
  border-collapse: collapse;
  width: 100%;
}

.gh-content th {
  padding: 0.5em 0.8em;
  text-align: left;
  font-size: .75em;
  text-transform: uppercase;
}

.gh-content td {
  padding: 0.4em 0.7em;
}

.gh-content tbody tr:nth-child(2n + 1) {
  background-color: rgba(0,0,0,0.1);
  padding: 1px;
}

.gh-content tbody tr:nth-child(2n + 2) td:last-child {
  box-shadow:
        inset 1px 0 rgba(0,0,0,0.1),
        inset -1px 0 rgba(0,0,0,0.1);
}

.gh-content tbody tr:nth-child(2n + 2) td {
  box-shadow: inset 1px 0 rgba(0,0,0,0.1);
}

.gh-content tbody tr:last-child {
  border-bottom: 1px solid rgba(0,0,0,.1);
}

/* Error Templates
/* ---------------------------------------------------------- */

.gh-error {
  flex: 1 0 auto;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding-bottom: 2vmin;
}

.gh-error-content {
  flex: 1 0 auto;
  text-align: center;
}

.gh-error-code {
  margin: 0;
  font-size: 14vmin;
}

.gh-error-description {
  max-width: 600px;
  margin: 0 auto;
  padding: 0 2rem;
  font-size: 4vmin;
  line-height: 1.2em;
  font-weight: 300;
  opacity: 0.6;
}

.gh-error-link {
  display: block;
  margin-top: 4vmin;
  font-size: 1.6rem;
}

.gh-error-stack {
  max-width: 600px;
  margin: 0 auto 0;
  padding: 8vmin 0;
  text-align: left;
}

.gh-error-stack-list {
  margin: 4vmin 0 0;
  font-size: 1.4rem;
}

.gh-error-stack-list > li {
  padding: 2rem 0;
  margin: 0;
  border-top: rgba(0,0,0,0.1) 1px solid;
}

.gh-error-stack-function {
  margin: 0 0 0.5em;
  font-size: 1.8rem;
  color: red;
}

/* Global Footer
/* ---------------------------------------------------------- */

.gh-foot {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 8vmin 4vmin 4vmin;
}

.gh-foot .gh-container {
  width: auto;
}

.gh-foot a {
  color: inherit;
}

.gh-foot-menu {
  display: flex;
  align-items: center;
  justify-content: center;
}

.gh-foot-menu .nav {
  display: inline-flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  list-style: none;
  font-size: 1.8rem;
}

.gh-foot-menu .nav li {
  margin: 0 1.5vmin;
  padding: 0;
}

.gh-foot-menu .nav a {
  display: inline-block;
  padding: 3px 0;
  text-decoration: none;
  box-shadow: 0 -1px 0 0 currentcolor inset;
}

.gh-foot-meta {
  margin: 2rem 0;
  font-size: 1.5rem;
  text-align: center;
  opacity: 0.75;
}

@media (max-width: 700px) {
  .gh-foot-menu .nav {
    font-size: 1.6rem;
  }
}

/* Global Header
/* ---------------------------------------------------------- */

.gh-head {
  padding: 3vmin 4vmin;
  font-size: 1.6rem;
  line-height: 1.3em;
  background: inherit;
}

.gh-head a {
  color: inherit;
  text-decoration: none;
}

.gh-head-inner {
  display: grid;
  grid-gap: 40px;
  grid-template-columns: 1fr auto 1fr;
  grid-auto-flow: row dense;
}

/* Brand
/* ---------------------------------------------------------- */

.gh-head-brand {
  grid-column-start: 2;
  display: flex;
  align-items: center;
  max-width: 200px;
  text-align: center;
  word-break: break-all;
}

.gh-head-logo {
  display: block;
  padding: 10px 0;
  font-weight: 600;
  font-size: 2.2rem;
  line-height: 1.2em;
}

.gh-head-logo img {
  max-height: 40px;
}

/* Primary Navigation
/* ---------------------------------------------------------- */

.gh-head-menu {
  display: flex;
  align-items: center;
}

.gh-head-menu .nav {
  display: inline-flex;
  flex-wrap: wrap;
  align-items: center;
  list-style: none;
}

.gh-head-menu .nav li {
  margin: 0 1.5vmin 0 0;
  padding: 0;
}

.gh-head-menu .nav a {
  display: inline-block;
  padding: 5px 0;
}

.gh-head-menu .nav-current a {
  box-shadow: 0 -1px 0 0 currentcolor inset;
}

/* Secondary Navigation
/* ---------------------------------------------------------- */

.gh-head-actions {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  list-style: none;
  text-align: right;
}

.gh-head-actions-list {
  display: inline-flex;
  gap: 10px;
  flex-wrap: wrap;
  justify-content: flex-end;
  align-items: center;
}

.gh-head-actions-list a:not([class]) {
  display: inline-block;
  margin: 0 0 0 1.5vmin;
  padding: 5px 0;
}

/* Mobile Menu Trigger
/* ---------------------------------------------------------- */

.gh-burger {
  position: relative;
  display: none;
  cursor: pointer;
}

.gh-burger-box {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 33px;
  height: 33px;
}

.gh-burger-inner {
  width: 100%;
  height: 100%;
}

.gh-burger-box::before {
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  bottom: 0;
  margin: auto;
  content: '';
  width: 100%;
  height: 1px;
  background: currentcolor;
  transition: transform 300ms cubic-bezier(.2,.6,.3,1), width 300ms cubic-bezier(.2,.6,.3,1);
  will-change: transform, width;
}

.gh-burger-inner::before,
.gh-burger-inner::after {
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  bottom: 0;
  margin: auto;
  content: '';
  width: 100%;
  height: 1px;
  background: currentcolor;
  transition: transform 250ms cubic-bezier(.2,.7,.3,1), width 250ms cubic-bezier(.2,.7,.3,1);
  will-change: transform, width;
}

.gh-burger-inner::before {
  transform: translatey(-6px);
}

.gh-burger-inner::after {
  transform: translatey(6px);
}

body:not(.gh-head-open) .gh-burger:hover .gh-burger-inner::before {
  transform: translatey(-8px);
}

body:not(.gh-head-open) .gh-burger:hover .gh-burger-inner::after {
  transform: translatey(8px);
}

.gh-head-open .gh-burger-box::before {
  width: 0;
  transform: translatex(19px);
  transition: transform 200ms cubic-bezier(.2,.7,.3,1), width 200ms cubic-bezier(.2,.7,.3,1);
}

.gh-head-open .gh-burger-inner::before {
  width: 26px;
  transform: translatex(6px) rotate(135deg);
}

.gh-head-open .gh-burger-inner::after {
  width: 26px;
  transform: translatex(6px) rotate(-135deg);
}

/* Layout Variants
/* ---------------------------------------------------------- */

.gh-head-brandnavactions .gh-head-brand {
  grid-column-start: 1;
}

.gh-head-brandnav .gh-container {
  grid-gap: 0;
  grid-template-columns: auto max-content max-content;
}

.gh-head-brandnav .gh-head-brand {
  grid-column-start: 1;
}

.gh-head-brandnav .gh-head-menu {
  margin-left: 40px;
}

.gh-head-brandnav .gh-head-menu .nav li {
  margin: 0 0 0 1.5vmin;
  padding: 0;
}

/* Center Stacked */

.gh-head-stacked .gh-container {
  grid-template-columns: 1fr;
  grid-gap: 2vmin;
}

.gh-head-stacked .gh-head-brand {
  grid-column-start: 1;
  width: 100%;
  max-width: none;
  display: flex;
  justify-content: center;
  text-align: center;
}

.gh-head-stacked .gh-head-menu,
.gh-head-stacked .gh-head-actions,
.gh-head-stacked .gh-head-actions-list {
  justify-content: center;
}

.gh-head-stacked .gh-head-actions a:first-child svg {
  margin-left: 0;
}

/* Mobile Menu
/* ---------------------------------------------------------- */

/* IDs needed to ensure sufficient specificity */

@media (max-width: 900px) {
  .gh-burger {
    display: inline-block;
  }

  #gh-head {
    transition: all 0.4s ease-out;
    overflow: hidden;
  }

  #gh-head .gh-head-inner {
    height: 100%;
    grid-template-columns: 1fr;
  }

  #gh-head .gh-head-brand {
    position: relative;
    z-index: 10;
    grid-column-start: auto;
    max-width: none;
    display: flex;
    align-items: center;
    justify-content: space-between;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
  }

  #gh-head .gh-head-logo {
    font-size: 2.2rem;
  }

  #gh-head .gh-head-logo img {
    max-height: 40px;
  }

  #gh-head .gh-head-menu {
    align-self: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    margin: 0 0 10vh 0;
    font-weight: 300;
    font-size: 3.6rem;
    line-height: 1.1em;
  }

  #gh-head .gh-head-menu .nav li {
    margin: 5px 0;
  }

  #gh-head .gh-head-menu .nav a {
    padding: 8px 0;
  }

  #gh-head .gh-head-menu .nav {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  #gh-head .gh-head-actions {
    padding: 20px 0;
    justify-content: center;
    text-align: left;
  }

  #gh-head .gh-head-actions a {
    margin: 0 10px;
  }

  /* Hide collapsed content */

  #gh-head .gh-head-actions,
    #gh-head .gh-head-menu {
    display: none;
  }

  /* Open the menu */

  .gh-head-open {
    overflow: hidden;
    height: 100vh;
  }

  .gh-head-open #gh-head {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 900;
    overflow-y: scroll;
  }

  .gh-head-open #gh-head .gh-head-inner {
    grid-template-rows: auto 1fr auto;
  }

  .gh-head-open #gh-head .gh-head-actions,
    .gh-head-open #gh-head .gh-head-menu {
    display: flex;
  }
}

@media (max-width: 600px) {
  #gh-head .gh-head-menu {
    font-size: 6vmin;
  }
}

/* Members Auth Template
/* ---------------------------------------------------------- */

.gh-auth-form {
  width: 100%;
  max-width: 600px;
  margin: 0 auto 10vmin;
  text-align: center;
}

.gh-auth-title {
  margin: 0 0 0.1em;
  font-size: 4.2rem;
}

.gh-auth-form p {
  margin: 10px 0 4vmin 0;
  font-size: 1.7rem;
  color: rgba(0,0,0,0.6)
}

.gh-auth-form p small {
  display: inline-block;
  margin: 15px 0 0 0;
  font-size: 1.4rem;
}

.gh-auth-box {
  display: flex;
  align-items: center;
  justify-content: space-between;
  max-width: 460px;
  margin: 0 auto;
}

.gh-auth-box .gh-button {
  margin-left: 10px;
}

@media (max-width: 600px) {
  .gh-auth-box {
    flex-direction: column;
    max-width: 400px;
  }

  .gh-auth-box .gh-button {
    width: 100%;
    margin: 15px 0 0 0;
  }
}

/* Members Forms
/* ---------------------------------------------------------- */

form[data-members-form] .gh-button-loader,
form[data-members-form] .message-success,
form[data-members-form] .message-error {
  display: none;
}

.gh-button-content {
  min-width: 100px;
}

.message-success svg,
.message-error svg {
  position: relative;
  top: -1px;
  margin-right: 5px;
  height: 15px;
  width: 15px;
}

.message-success svg {
  fill: #fff;
}

.message-error svg {
  fill: var(--color-error);
}

form[data-members-form].success .message-success,
form[data-members-form].error .message-error {
  position: fixed;
  top: 20px;
  left: 4vmin;
  right: 4vmin;
  z-index: 9999;
  max-width: calc(1400px - 8vmin);
  margin: 0 auto;
  padding: 10px 0;
  color: #fff;
  font-size: 1.4rem;
  line-height: 1.5em;
  font-weight: 500;
  text-align: center;
  background: var(--color-base);
  border-radius: var(--radius);
}

form[data-members-form].success .message-success {
  background: var(--color-success);
}

form[data-members-form].error .message-error {
  color: var(--color-error);
  background: #fff;
  box-shadow: var(--color-error) 0 0 0 1px;
}

form[data-members-form] .gh-button {
  position: relative;
  min-width: 120px;
}

/*-- Loading --*/

/* Hide button text */

form[data-members-form].loading .gh-button-content {
  visibility: hidden;
}

/* Show loading spinner */

form[data-members-form].loading .gh-button-loader {
  display: inline-block;
  position: absolute;
  left: 50%;
  bottom: -30%;
  margin: 0 0 0 -19px;
  transform: scale(0.6);
}

.gh-button-loader svg path,
.gh-button-loader svg rect{
  fill: #fff;
}

/*-- Show success message on success --*/

form[data-members-form].success .message-success {
  display: block;
}

/*-- Show error message on error --*/

form[data-members-form].error .message-error {
  display: block;
}

.gh-pagination .pagination {
  display: flex;
  justify-content: space-between;
  margin-block: 4vmin;
}

/* Read More
/* ---------------------------------------------------------- */

.gh-readmore {
  padding: 8vmin 4vmin;
  font-size: 2.6rem;
}

.gh-readmore-inner {
  display: grid;
  grid-gap: 8vmin;
  grid-template-columns: 1fr 1fr;
}

.gh-readmore-prev {
  justify-content: flex-end;
  text-align: right;
}

.gh-readmore a {
  display: flex;
  color: currentColor;
  text-decoration: none;
}

.gh-readmore h4 {
  width: 100%;
  font-size: inherit;
}

.gh-readmore svg {
  display: inline-block;
  vertical-align: middle;
  height: 1em;
  margin: 0.15em 0 0;
}

.gh-readmore svg + h4,
.gh-readmore h4 + svg {
  margin-left: 2vmin;
}

@media (max-width: 700px) {
  .gh-readmore {
    font-size: 1.6rem;
  }

  .gh-readmore svg {
    margin: 0.1em 0 0;
  }
}

/* Main - Your styles here! Edit below
/* ---------------------------------------------------------- */

html,
.gh-viewport {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background: #ffffff;
}

.gh-main {
  flex: 1 0 auto;
  display: flex;
  flex-direction: column;
}

.gh-page {
  padding: 0 4vmin;
}

.gh-article {
  padding: 8vmin 0;
}

.gh-postfeed {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(min(350px, 100%), 1fr));
  gap: 4.8vmin 4vmin;
  padding: 8vmin 0;
}

.gh-postfeed > *:first-child {
  grid-column: 1 / -1;
}

.gh-container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
}

.gh-head-actions a:not(.gh-button) {
  display: inline-flex;
  align-items: center;
  margin: 0;
  padding: 10px;
}

.gh-head-actions a svg {
  height: 1.8rem;
  fill: currentcolor;
}

.gh-head-actions a:first-child svg {
  margin-left: 20px;
}

.gh-head-actions a:last-child svg {
  height: 2rem;
}

/* Index
/* ---------------------------------------------------------- */

/* .gh-card:not(:first-child) {
    margin: 8vmin auto 0;
} */

.gh-card-link {
  display: flex;
  flex-direction: column;
}

.gh-card-image {
  width: 100%;
  /* max-height: 700px; */
  -o-object-fit: cover;
     object-fit: cover;
  margin-bottom: 4vmin;
  aspect-ratio: 1 / 1;
}

.gh-card-image:first-of-type {
  aspect-ratio: 16 / 9;
}

.gh-card-meta {
  display: block;
  margin: 0 0 1rem;
  font-size: 1.4rem;
  line-height: 1.2em;
  letter-spacing: 0.5px;
  text-transform: uppercase;
  opacity: 0.8;
}

.gh-card-content {
  max-width: 720px;
  margin: 0 auto;
  text-align: center;
  font-size: 1.6rem;
}

.gh-card-content p {
  margin: 1.2rem 0;
  padding: 0 3vmin;
}

.gh-card-content > strong {
  display: inline-block;
  padding: 1px 0;
  font-weight: 500;
  box-shadow: 0 -1px 0 0 inset currentColor;
  opacity: 0.75;
}

/* Page
/* ---------------------------------------------------------- */

.gh-page-head {
  margin: 0 auto;
  padding: 8vmin 0 4vmin;
  text-align: center;
}

.gh-page-image {
  margin: 4vmin 0 0 0;
}

.gh-page-head > p {
  max-width: 720px;
  margin: 0.3em auto 0;
  padding: 0 6vmin;
  font-size: 1.3em;
  line-height: 1.4em;
  opacity: 0.5;
}

@media (max-width: 700px) {
  .gh-page-head > p {
    font-size: 1.6rem;
  }
}

/* Post
/* ---------------------------------------------------------- */

.gh-header {
  padding: 0 0 8vmin 0;
  text-align: center;
}

.gh-post-meta {
  display: block;
  margin: 0 0 1rem;
  font-size: 1.4rem;
  letter-spacing: 0.5px;
  text-transform: uppercase;
  opacity: 0.8;
}

.gh-excerpt {
  margin: 1rem 0 0 0;
}

.gh-feature-image {
  grid-column: wide-start / wide-end;
  width: 100%;
  margin: 8vmin 0 0;
}

.gh-feature-image img {
  margin-inline: auto;
  width: 100%;
}

.gh-post-footer {
  margin: 2rem 0;
}

/* Author Archive
/* ---------------------------------------------------------- */

.gh-author-image {
  height: 12vmin;
  width: 12vmin;
  margin: 0 auto 1.5em;
  border-radius: 100%;
  overflow: hidden;
  -o-object-fit: cover;
     object-fit: cover;
}

.gh-author-meta {
  margin: 2vmin 0 0 0;
  font-size: 1.2em;
}

.gh-author-links {
  display: flex;
  align-items: center;
  justify-content: center;
}

.gh-author-links a {
  position: relative;
  display: inline-flex;
  align-items: center;
  margin: 0 0.75vmin;
}

.gh-author-links a + a:before {
  display: block;
  content: "";
  margin: 0 1.25vmin 0 0;
  height: 1em;
  width: 1px;
  background: rgba(0,0,0,0.3);
  transform: rotate(20deg);
}

@media (max-width: 700px) {
  .gh-author-meta {
    font-size: 1.6rem;
  }
}

@media (min-width: 1024px) {
  .lg\:prose-xl {
    font-size: 1.25rem;
    line-height: 1.8;
  }

  .lg\:prose-xl :where(p):not(:where([class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
    font-size: 1.2em;
    line-height: 1.5;
    margin-top: 1em;
    margin-bottom: 1em;
  }

  .lg\:prose-xl :where(blockquote):not(:where([class~="not-prose"] *)) {
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-left: 1.0666667em;
  }

  .lg\:prose-xl :where(h1):not(:where([class~="not-prose"] *)) {
    font-size: 2.8em;
    margin-top: 0;
    margin-bottom: 0.8571429em;
    line-height: 1;
  }

  .lg\:prose-xl :where(h2):not(:where([class~="not-prose"] *)) {
    font-size: 1.8em;
    margin-top: 1.5555556em;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }

  .lg\:prose-xl :where(h3):not(:where([class~="not-prose"] *)) {
    font-size: 1.5em;
    margin-top: 1.6em;
    margin-bottom: 0.6666667em;
    line-height: 1.3333333;
  }

  .lg\:prose-xl :where(h4):not(:where([class~="not-prose"] *)) {
    margin-top: 1.8em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }

  .lg\:prose-xl :where(img):not(:where([class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(video):not(:where([class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(figure):not(:where([class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .lg\:prose-xl :where(figure > *):not(:where([class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .lg\:prose-xl :where(figcaption):not(:where([class~="not-prose"] *)) {
    font-size: 0.9em;
    line-height: 1.5555556;
    margin-top: 1em;
  }

  .lg\:prose-xl :where(code):not(:where([class~="not-prose"] *)) {
    font-size: 0.9em;
  }

  .lg\:prose-xl :where(h2 code):not(:where([class~="not-prose"] *)) {
    font-size: 0.8611111em;
  }

  .lg\:prose-xl :where(h3 code):not(:where([class~="not-prose"] *)) {
    font-size: 0.9em;
  }

  .lg\:prose-xl :where(pre):not(:where([class~="not-prose"] *)) {
    font-size: 0.9em;
    line-height: 1.7777778;
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.5rem;
    padding-top: 1.1111111em;
    padding-right: 1.3333333em;
    padding-bottom: 1.1111111em;
    padding-left: 1.3333333em;
  }

  .lg\:prose-xl :where(ol):not(:where([class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    padding-left: 1.6em;
  }

  .lg\:prose-xl :where(ul):not(:where([class~="not-prose"] *)) {
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    padding-left: 1.6em;
  }

  .lg\:prose-xl :where(li):not(:where([class~="not-prose"] *)) {
    margin-top: 0.6em;
    margin-bottom: 0.6em;
  }

  .lg\:prose-xl :where(ol > li):not(:where([class~="not-prose"] *)) {
    padding-left: 0.4em;
  }

  .lg\:prose-xl :where(ul > li):not(:where([class~="not-prose"] *)) {
    padding-left: 0.4em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > ul > li p):not(:where([class~="not-prose"] *)) {
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
    margin-top: 1.2em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
    margin-top: 1.2em;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
    margin-bottom: 1.2em;
  }

  .lg\:prose-xl :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
    margin-top: 0.8em;
    margin-bottom: 0.8em;
  }

  .lg\:prose-xl :where(hr):not(:where([class~="not-prose"] *)) {
    margin-top: 2.8em;
    margin-bottom: 2.8em;
  }

  .lg\:prose-xl :where(hr + *):not(:where([class~="not-prose"] *)) {
    margin-top: 0;
  }

  .lg\:prose-xl :where(h2 + *):not(:where([class~="not-prose"] *)) {
    margin-top: 0;
  }

  .lg\:prose-xl :where(h3 + *):not(:where([class~="not-prose"] *)) {
    margin-top: 0;
  }

  .lg\:prose-xl :where(h4 + *):not(:where([class~="not-prose"] *)) {
    margin-top: 0;
  }

  .lg\:prose-xl :where(table):not(:where([class~="not-prose"] *)) {
    font-size: 0.9em;
    line-height: 1.5555556;
  }

  .lg\:prose-xl :where(thead th):not(:where([class~="not-prose"] *)) {
    padding-right: 0.6666667em;
    padding-bottom: 0.8888889em;
    padding-left: 0.6666667em;
  }

  .lg\:prose-xl :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
    padding-left: 0;
  }

  .lg\:prose-xl :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
    padding-right: 0;
  }

  .lg\:prose-xl :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
    padding-top: 0.8888889em;
    padding-right: 0.6666667em;
    padding-bottom: 0.8888889em;
    padding-left: 0.6666667em;
  }

  .lg\:prose-xl :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
    padding-left: 0;
  }

  .lg\:prose-xl :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
    padding-right: 0;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > :first-child):not(:where([class~="not-prose"] *)) {
    margin-top: 0;
  }

  .lg\:prose-xl :where(.lg\:prose-xl > :last-child):not(:where([class~="not-prose"] *)) {
    margin-bottom: 0;
  }
}

.prose-figure\:m-auto :is(:where(figure):not(:where([class~="not-prose"] *))) {
  margin: auto;
}
